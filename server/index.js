// server/index.js

const express    = require('express');
const cors       = require('cors');
const bodyParser = require('body-parser');
const sequelize  = require('./db');
const passport   = require('./passport');
const authRoutes = require('./routes/auth');
const { CLIENT_PORT, SERVER_PORT } = require('../config/ports');

// –õ–æ–≤–∏–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å –±–µ–∑ –ª–æ–≥–∞
process.on('uncaughtException', (err) => {
  console.error('‚ùå Uncaught Exception:', err);
});
process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ùå Unhandled Rejection at:', promise, 'reason:', reason);
});

// –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = express();

// Middleware
app.use(cors({
  origin: `http://localhost:${CLIENT_PORT}`,
  credentials: true,
}));
app.use(bodyParser.json());
app.use(passport.initialize());

// Health-check endpoint
app.get('/health', (req, res) => {
  console.log('üîç /health requested');
  res.send('OK');
});

// Auth routes
app.use('/api/auth', authRoutes);

// –ó–∞–ø—É—Å–∫ HTTP-—Å–µ—Ä–≤–µ—Ä–∞ ‚Äî —ç—Ç–æ –¥–µ—Ä–∂–∏—Ç Node.js ¬´–∂–∏–≤—ã–º¬ª
const PORT = process.env.PORT || SERVER_PORT;
app.listen(PORT, () => {
  console.log(`üöÄ Server listening on http://localhost:${PORT}`);
});

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î (–≤ —Ñ–æ–Ω–µ)
(async () => {
  try {
    console.log('üî® Connecting to DB‚Ä¶');
    await sequelize.authenticate();
    console.log('‚úÖ DB connected');

    console.log('üî® Syncing models‚Ä¶');
    await sequelize.sync();
    console.log('‚úÖ DB synced');
  } catch (err) {
    console.error('‚ùå DB error:', err);
    // –ù–µ –≤—ã—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–≤–∞–ª—Å—è –¥–æ—Å—Ç—É–ø–µ–Ω
  }
})();
